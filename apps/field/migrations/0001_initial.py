# Generated by Django 5.0 on 2024-04-11 11:01

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('farms', '0001_initial'),
        ('grower', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CsvToField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('csv_file', models.FileField(upload_to='CSV')),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('acreage', models.FloatField()),
                ('fsa_farm_number', models.CharField(blank=True, help_text='Multiple values can be Comma (,) separated', max_length=250, null=True, verbose_name='FSA Farm Number')),
                ('fsa_tract_number', models.CharField(blank=True, help_text='Multiple values can be Comma (,) separated', max_length=250, null=True, verbose_name='FSA Tract Number')),
                ('fsa_field_number', models.CharField(blank=True, help_text='Multiple values can be Comma (,) separated', max_length=250, null=True, verbose_name='FSA Field Number')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('crop', models.CharField(blank=True, choices=[('RICE', 'Rice'), ('COTTON', 'Cotton'), ('WHEAT', 'Wheat'), ('PEANUT', 'Peanut'), ('BEANS', 'Beans')], max_length=255, null=True)),
                ('variety', models.CharField(blank=True, choices=[('DG-263L', 'DG-263L'), ('DG-Wheat', 'DG-Wheat'), ('DG3605', 'DG3605'), ('DG 1464', 'DG 1464'), ('DG 2425 XF', 'DG 2425 XF'), ('DG 3215 B3XF', 'DG 3215 B3XF'), ('DG 3450 B2XF', 'DG 3450 B2XF'), ('DG 3470 B3XF', 'DG 3470 B3XF'), ('DG 3570 B3XF', 'DG 3570 B3XF'), ('DG 3635 B2XF', 'DG 3635 B2XF'), ('DG 3544 B2XF', 'DG 3544 B2XF'), ('DG 3651NR B2XF', 'DG 3651NR B2XF'), ('DG 3109 B2XF', 'DG 3109 B2XF'), ('DG 3387 B3XF', 'DG 3387 B3XF'), ('DG 3421 B3XF', 'DG 3421 B3XF'), ('DG H929 B3XF', 'DG H929 B3XF'), ('DG 3555 B3XF', 'DG 3555 B3XF'), ('DG 3402 B3XF', 'DG 3402 B3XF'), ('DG H959 B3XF', 'DG H959 B3XF'), ('DG 3469 B3XF', 'DG 3469 B3XF'), ('DG 3615 B3XF', 'DG 3615 B3XF'), ('DG P224 B3XF', 'DG P224 B3XF'), ('DG 3385 B2XF', 'DG 3385 B2XF'), ('DG 3422 B3XF', 'DG 3422 B3XF'), ('DG 3799 B3XF', 'DG 3799 B3XF')], max_length=255, null=True)),
                ('yield_per_acre', models.FloatField(blank=True, null=True, verbose_name='Yield Per Acre')),
                ('total_yield', models.FloatField(blank=True, null=True, verbose_name='Total Yield')),
                ('crop_tech', models.CharField(blank=True, max_length=200, null=True, verbose_name='Crop Tech')),
                ('burndown_chemical', models.CharField(blank=True, max_length=200, null=True, verbose_name='Burndown Chemical')),
                ('burndown_chemical_date', models.DateField(blank=True, null=True, verbose_name='Burndown Chemical Date')),
                ('plant_date', models.DateField(blank=True, null=True, verbose_name='Plant Date')),
                ('preemergence_chemical', models.CharField(blank=True, max_length=100, null=True, verbose_name='Preemergence Chemical')),
                ('preemergence_chemical_date', models.DateField(blank=True, null=True, verbose_name='Preemergence Chemical Date')),
                ('stand_count', models.IntegerField(blank=True, null=True, verbose_name='Stand Count')),
                ('emergence_date', models.DateField(blank=True, null=True, verbose_name='Emergence Date')),
                ('post_emergence_chemical_1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Emergence Chemical 1')),
                ('post_emergence_chemical_1_date', models.DateField(blank=True, null=True, verbose_name='Post Emergence Chemical 1 Date')),
                ('post_emergence_chemical_2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Emergence Chemical 2')),
                ('post_emergence_chemical_2_date', models.DateField(blank=True, null=True, verbose_name='Post Emergence Chemical 2 Date')),
                ('post_emergence_chemical_3', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Emergence Chemical 3')),
                ('post_emergence_chemical_3_date', models.DateField(blank=True, null=True, verbose_name='Post Emergence Chemical 3 Date')),
                ('post_emergence_chemical_4', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Emergence Chemical 4')),
                ('post_emergence_chemical_4_date', models.DateField(blank=True, null=True, verbose_name='Post Emergence Chemical 4 Date')),
                ('flood_date', models.DateField(blank=True, null=True, verbose_name='Flood Date')),
                ('awd_drydown_date', models.DateField(blank=True, null=True, verbose_name='AWD Dry Down Date')),
                ('fungicide_micronutrients', models.CharField(blank=True, max_length=100, null=True, verbose_name='Fungicide Micronutrients')),
                ('fungicide_micronutrients_date', models.DateField(blank=True, null=True, verbose_name='Fungicide Micronutrients Date')),
                ('insecticide_application', models.CharField(blank=True, max_length=100, null=True, verbose_name='Insecticide Application')),
                ('insecticide_application_date', models.DateField(blank=True, null=True, verbose_name='Insecticide Application Date')),
                ('drain_date', models.DateField(blank=True, null=True, verbose_name='Drain Date')),
                ('sodium_chlorate_date', models.DateField(blank=True, null=True, verbose_name='Sodium Chlorate Date')),
                ('harvest_date', models.DateField(blank=True, null=True, verbose_name='Harvest Date')),
                ('soil_sample_date', models.DateField(blank=True, null=True, verbose_name='Soil Sample Date')),
                ('litter', models.CharField(blank=True, max_length=100, null=True)),
                ('pre_fert_rate', models.PositiveIntegerField(blank=True, null=True, verbose_name='Pre Fert Rate')),
                ('pre_fert_product', models.CharField(blank=True, choices=[('DAP', 'lb (18-46-0) DAP'), ('UREA', 'lb (46-0-0) Urea'), ('AMS', 'lb (21-0-0-24) AMS'), ('ORBIX', 'oz (8-5-3) Orbix'), ('UREA_AMS', 'lb (67-0-0-24) Urea + AMS'), ('DAP_AMS', 'lb (39-46-0-24) DAP + AMS'), ('UREA_AGROTAIN', 'lb (46-0-0) Urea + Agrotain'), ('UREA_CONTAIN', 'lb (46-0-0) Urea + Contain')], max_length=255, null=True, verbose_name='Pre Fert Product')),
                ('early_post_fert_rate', models.PositiveIntegerField(blank=True, null=True, verbose_name='Early Post Fert Rate')),
                ('early_post_fert_product', models.CharField(blank=True, choices=[('DAP', 'lb (18-46-0) DAP'), ('UREA', 'lb (46-0-0) Urea'), ('AMS', 'lb (21-0-0-24) AMS'), ('ORBIX', 'oz (8-5-3) Orbix'), ('UREA_AMS', 'lb (67-0-0-24) Urea + AMS'), ('DAP_AMS', 'lb (39-46-0-24) DAP + AMS'), ('UREA_AGROTAIN', 'lb (46-0-0) Urea + Agrotain'), ('UREA_CONTAIN', 'lb (46-0-0) Urea + Contain')], max_length=255, null=True, verbose_name='Early Post Fert Product')),
                ('early_post_fert_date', models.DateField(blank=True, null=True, verbose_name='Early Post_Fert Date')),
                ('foliar_fert_app_rate', models.FloatField(blank=True, null=True, verbose_name='Foliar Fert App Rate')),
                ('foliar_fert_app_product', models.CharField(blank=True, choices=[('DAP', 'lb (18-46-0) DAP'), ('UREA', 'lb (46-0-0) Urea'), ('AMS', 'lb (21-0-0-24) AMS'), ('ORBIX', 'oz (8-5-3) Orbix'), ('UREA_AMS', 'lb (67-0-0-24) Urea + AMS'), ('DAP_AMS', 'lb (39-46-0-24) DAP + AMS'), ('UREA_AGROTAIN', 'lb (46-0-0) Urea + Agrotain'), ('UREA_CONTAIN', 'lb (46-0-0) Urea + Contain')], max_length=100, null=True, verbose_name='Foliar Fert App Product')),
                ('foliar_fert_app_date', models.DateField(blank=True, null=True, verbose_name='Foliar Fert App Date')),
                ('pre_flood_fert_rate', models.FloatField(blank=True, null=True, verbose_name='Pre Flood Fert Rate')),
                ('pre_flood_fert_product', models.CharField(blank=True, choices=[('DAP', 'lb (18-46-0) DAP'), ('UREA', 'lb (46-0-0) Urea'), ('AMS', 'lb (21-0-0-24) AMS'), ('ORBIX', 'oz (8-5-3) Orbix'), ('UREA_AMS', 'lb (67-0-0-24) Urea + AMS'), ('DAP_AMS', 'lb (39-46-0-24) DAP + AMS'), ('UREA_AGROTAIN', 'lb (46-0-0) Urea + Agrotain'), ('UREA_CONTAIN', 'lb (46-0-0) Urea + Contain')], max_length=255, null=True, verbose_name='Pre Flood Fert Product')),
                ('pre_flood_fert_date', models.DateField(blank=True, null=True, verbose_name='Pre Flood Fert Date')),
                ('post_flood_midseason_fert_rate', models.FloatField(blank=True, null=True, verbose_name='Post Flood Midseason Fert Rate')),
                ('post_flood_midseason_fert_product', models.CharField(blank=True, choices=[('DAP', 'lb (18-46-0) DAP'), ('UREA', 'lb (46-0-0) Urea'), ('AMS', 'lb (21-0-0-24) AMS'), ('ORBIX', 'oz (8-5-3) Orbix'), ('UREA_AMS', 'lb (67-0-0-24) Urea + AMS'), ('DAP_AMS', 'lb (39-46-0-24) DAP + AMS'), ('UREA_AGROTAIN', 'lb (46-0-0) Urea + Agrotain'), ('UREA_CONTAIN', 'lb (46-0-0) Urea + Contain')], max_length=255, null=True, verbose_name='Post Flood Midseason Fert Product')),
                ('post_flood_midseason_fert_date', models.DateField(blank=True, null=True, verbose_name='Post Flood Midseason Fert Date')),
                ('post_flood_midseason_fert_rate2', models.DateTimeField(blank=True, null=True, verbose_name='Post Flood Midseason Fert Rate 2')),
                ('post_flood_midseason_fert_product2', models.CharField(blank=True, choices=[('DAP', 'lb (18-46-0) DAP'), ('UREA', 'lb (46-0-0) Urea'), ('AMS', 'lb (21-0-0-24) AMS'), ('ORBIX', 'oz (8-5-3) Orbix'), ('UREA_AMS', 'lb (67-0-0-24) Urea + AMS'), ('DAP_AMS', 'lb (39-46-0-24) DAP + AMS'), ('UREA_AGROTAIN', 'lb (46-0-0) Urea + Agrotain'), ('UREA_CONTAIN', 'lb (46-0-0) Urea + Contain')], max_length=255, null=True, verbose_name='Post Flood Midseason Fert Product 2')),
                ('post_flood_midseason_fert_date2', models.DateField(blank=True, null=True, verbose_name='Post Flood Midseason Fert Date 2')),
                ('post_flood_midseason_fert_rate3', models.PositiveIntegerField(blank=True, null=True, verbose_name='Post Flood Midseason Fert Rate 3')),
                ('post_flood_midseason_fert_product3', models.CharField(blank=True, choices=[('DAP', 'lb (18-46-0) DAP'), ('UREA', 'lb (46-0-0) Urea'), ('AMS', 'lb (21-0-0-24) AMS'), ('ORBIX', 'oz (8-5-3) Orbix'), ('UREA_AMS', 'lb (67-0-0-24) Urea + AMS'), ('DAP_AMS', 'lb (39-46-0-24) DAP + AMS'), ('UREA_AGROTAIN', 'lb (46-0-0) Urea + Agrotain'), ('UREA_CONTAIN', 'lb (46-0-0) Urea + Contain')], max_length=255, null=True, verbose_name='Post Flood Midseason Fert Product 3')),
                ('post_flood_midseason_fert_date3', models.DateField(blank=True, null=True, verbose_name='Post Flood Midseason Fert Date 3')),
                ('boot_fertilizer_rate', models.PositiveIntegerField(blank=True, help_text='Enter number greater than 0', null=True, verbose_name='Boot Fertilizer Rate')),
                ('boot_fertilizer_product', models.CharField(blank=True, choices=[('DAP', 'lb (18-46-0) DAP'), ('UREA', 'lb (46-0-0) Urea'), ('AMS', 'lb (21-0-0-24) AMS'), ('ORBIX', 'oz (8-5-3) Orbix'), ('UREA_AMS', 'lb (67-0-0-24) Urea + AMS'), ('DAP_AMS', 'lb (39-46-0-24) DAP + AMS'), ('UREA_AGROTAIN', 'lb (46-0-0) Urea + Agrotain'), ('UREA_CONTAIN', 'lb (46-0-0) Urea + Contain')], max_length=255, null=True, verbose_name='Boot Fertilizer Product')),
                ('boot_fertilizer_date', models.DateField(blank=True, null=True, verbose_name='Boot Fertilizer Date')),
                ('total_n_applied_lbs_ac', models.PositiveIntegerField(blank=True, help_text='Enter number between 0 and 300', null=True, verbose_name='Total N Applied lbs ac')),
                ('flow_meter_beginning_reading', models.CharField(blank=True, max_length=100, null=True, verbose_name='Flow Meter Beginning Reading')),
                ('flow_meter_multiplier', models.IntegerField(blank=True, null=True, verbose_name='Flow Meter Multiplier')),
                ('flow_meter_end_reading', models.FloatField(blank=True, null=True, verbose_name='Flow Meter End Reading')),
                ('water_source', models.CharField(blank=True, choices=[('GROUND', 'Ground'), ('SURFACE', 'Surface')], max_length=100, null=True, verbose_name='Water Source')),
                ('total_n_applied', models.PositiveIntegerField(blank=True, help_text='Enter number between 0 and 300', null=True, verbose_name='Total N Applied')),
                ('measured_water_use', models.CharField(blank=True, max_length=200, null=True, verbose_name='Measured Water Use')),
                ('field_design_and_use_of_plastic_pipe', models.CharField(blank=True, choices=[('38', 'Crooked levees = 38-acre inches'), ('37', 'Straight levees = 37-acre inches'), ('29', 'Straight levees + MIRI 29-acre inches'), ('22', 'Zero grade = 22-acre inches'), ('0', 'Precision-grade Row Rice')], max_length=100, null=True, verbose_name='Field Design And Use Of Plastic pipe')),
                ('soil_clay_percentage', models.FloatField(blank=True, help_text="Enter a number between 0 to 45 if clay '%'            is greater than 45 value should be adjusted to 45'%'", null=True, verbose_name='Soil Clay Percentage')),
                ('previous_crop', models.CharField(blank=True, max_length=100, null=True, verbose_name='Previous Crop')),
                ('straw_burnt_or_residue_removed', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=100, null=True, verbose_name='Straw Burnt Or Residue Removed')),
                ('straw_residue_tillage_and_cover_crop_management', models.CharField(blank=True, choices=[('1', 'Field burnt-full tillage'), ('2', 'Residue retained-full tillage'), ('3', 'Residue retained-full tillage-cover crop'), ('4', 'Residue retained (reduced tillage)'), ('5', 'Residue retained (reduced tillage)-cover crop'), ('6', 'Residue burnt (reduced tillage)'), ('7', 'Residue burnt (reduced tillage)-cover crop'), ('8', 'Residue burnt (no-tillage)-cover crop'), ('9', 'no-tillage')], max_length=100, null=True, verbose_name='Straw Residue Tillage And Cover Crop Management')),
                ('tillage_equipment_and_passes_or_fuel_usage_for_tillage', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tillage Equipment And Passes Or Fuel Usage For Tillage')),
                ('eschlon_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Echelon Id')),
                ('water_saving', models.IntegerField(blank=True, null=True, verbose_name='Water Saving')),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('gal_water_saved', models.CharField(blank=True, max_length=200, null=True)),
                ('water_lbs_saved', models.CharField(blank=True, max_length=200, null=True)),
                ('co2_eq_reduced', models.CharField(blank=True, max_length=200, null=True)),
                ('increase_nitrogen', models.CharField(blank=True, max_length=200, null=True)),
                ('ghg_reduction', models.CharField(blank=True, max_length=200, null=True)),
                ('land_use_efficiency', models.CharField(blank=True, max_length=200, null=True)),
                ('grower_premium_percentage', models.CharField(blank=True, max_length=200, null=True)),
                ('grower_dollar_premium', models.CharField(blank=True, max_length=200, null=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='farms.farm')),
                ('grower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grower.grower')),
            ],
        ),
        migrations.CreateModel(
            name='FieldUpdated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('crop_year', models.CharField(blank=True, choices=[('2022', '2022'), ('2023', '2023')], default='2022', max_length=20, null=True)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('acreage', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('fsa_farm_number', models.CharField(blank=True, help_text='Multiple values can be Comma (,) separated', max_length=250, null=True, verbose_name='FSA Farm Number')),
                ('fsa_tract_number', models.CharField(blank=True, help_text='Multiple values can be Comma (,) separated', max_length=250, null=True, verbose_name='FSA Tract Number')),
                ('fsa_field_number', models.CharField(blank=True, help_text='Multiple values can be Comma (,) separated', max_length=250, null=True, verbose_name='FSA Field Number')),
                ('crop', models.CharField(blank=True, choices=[('RICE', 'Rice'), ('COTTON', 'Cotton'), ('WHEAT', 'Wheat'), ('PEANUT', 'Peanut'), ('BEANS', 'Beans')], max_length=255, null=True)),
                ('variety', models.CharField(blank=True, choices=[('DG-263L', 'DG-263L'), ('DG-Wheat', 'DG-Wheat'), ('DG3605', 'DG3605'), ('DG 1464', 'DG 1464'), ('DG 2425 XF', 'DG 2425 XF'), ('DG 3215 B3XF', 'DG 3215 B3XF'), ('DG 3450 B2XF', 'DG 3450 B2XF'), ('DG 3470 B3XF', 'DG 3470 B3XF'), ('DG 3570 B3XF', 'DG 3570 B3XF'), ('DG 3635 B2XF', 'DG 3635 B2XF'), ('DG 3544 B2XF', 'DG 3544 B2XF'), ('DG 3651NR B2XF', 'DG 3651NR B2XF'), ('DG 3109 B2XF', 'DG 3109 B2XF'), ('DG 3387 B3XF', 'DG 3387 B3XF'), ('DG 3421 B3XF', 'DG 3421 B3XF'), ('DG H929 B3XF', 'DG H929 B3XF'), ('DG 3555 B3XF', 'DG 3555 B3XF'), ('DG 3402 B3XF', 'DG 3402 B3XF'), ('DG H959 B3XF', 'DG H959 B3XF'), ('DG 3469 B3XF', 'DG 3469 B3XF'), ('DG 3615 B3XF', 'DG 3615 B3XF'), ('DG P224 B3XF', 'DG P224 B3XF'), ('DG 3385 B2XF', 'DG 3385 B2XF'), ('DG 3422 B3XF', 'DG 3422 B3XF'), ('DG 3799 B3XF', 'DG 3799 B3XF')], max_length=255, null=True)),
                ('yield_per_acre', models.FloatField(blank=True, null=True, verbose_name='Yield Per Acre')),
                ('total_yield', models.FloatField(blank=True, null=True, verbose_name='Total Yield')),
                ('crop_tech', models.CharField(blank=True, max_length=200, null=True, verbose_name='Crop Tech')),
                ('previous_crop', models.CharField(blank=True, max_length=100, null=True, verbose_name='Previous Crop')),
                ('stand_count', models.IntegerField(blank=True, null=True, verbose_name='Stand Count')),
                ('plant_date', models.DateField(blank=True, null=True, verbose_name='Plant Date')),
                ('harvest_date', models.DateField(blank=True, null=True, verbose_name='Harvest Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('eschlon_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Echelon Id')),
                ('water_saving', models.IntegerField(blank=True, null=True, verbose_name='Water Saving')),
                ('gal_water_saved', models.CharField(blank=True, max_length=200, null=True)),
                ('water_lbs_saved', models.CharField(blank=True, max_length=200, null=True)),
                ('co2_eq_reduced', models.CharField(blank=True, max_length=200, null=True)),
                ('increase_nitrogen', models.CharField(blank=True, max_length=200, null=True)),
                ('ghg_reduction', models.CharField(blank=True, max_length=200, null=True)),
                ('land_use_efficiency', models.CharField(blank=True, max_length=200, null=True)),
                ('grower_premium_percentage', models.CharField(blank=True, max_length=200, null=True)),
                ('grower_dollar_premium', models.CharField(blank=True, max_length=200, null=True)),
                ('farm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='farms.farm')),
                ('field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='field.field')),
                ('grower', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='grower.grower')),
            ],
        ),
        migrations.CreateModel(
            name='FieldActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_activity', models.CharField(blank=True, max_length=200, null=True)),
                ('date_of_activity', models.DateField(blank=True, null=True)),
                ('type_of_application', models.CharField(blank=True, max_length=200, null=True)),
                ('mode_of_application', models.CharField(blank=True, max_length=200, null=True)),
                ('label_name', models.CharField(blank=True, max_length=200, null=True)),
                ('amount_per_acre', models.FloatField(blank=True, null=True)),
                ('unit_of_acre', models.CharField(blank=True, max_length=200, null=True)),
                ('n_nitrogen', models.FloatField(blank=True, null=True)),
                ('p_phosporus', models.FloatField(blank=True, null=True)),
                ('k_potassium', models.FloatField(blank=True, null=True)),
                ('special_notes', models.TextField(blank=True, null=True)),
                ('field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='field.field')),
                ('field_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='field.fieldupdated')),
            ],
        ),
        migrations.CreateModel(
            name='ShapeFileDataCo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinates', models.JSONField(default=list)),
                ('field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='field.field')),
            ],
        ),
    ]
