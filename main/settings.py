"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
# openAI key
import openai


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''
# old key....
# openai.api_key = "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"
openai.api_key = ""

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

ALLOWED_HOSTS = ["*"]

MAP_API_KEY = ''

#Test
STRIPE_PUBLIC_KEY = ''
STRIPE_SECRET_KEY = ''

#Live
# STRIPE_PUBLIC_KEY = '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'
# STRIPE_SECRET_KEY ='pk_live_51PsUqzBODua7a1xietkmsrmP7zEXLJ35LG6eftcjJ00jphFiYyaXsd0wUQ0ytAoC5FvhXMAkxSTEB0GKZoqK3tH500d1IhTedk'

#QuickBooks settings
os.environ['OAUTHLIB_RELAX_TOKEN_SCOPE'] = '1'
QUICKBOOKS_CLIENT_ID = "ABPRBiMNdM2uQjtIOhbYJ1SipuZNBOYkEOFvExdiCvz1phGysJ"
QUICKBOOKS_CLIENT_SECRET = ""
QUICKBOOKS_REDIRECT_URI = ''
QUICKBOOKS_ENVIRONMENT = 'sandbox'  
QUICKBOOKS_SCOPES = ['com.intuit.quickbooks.accounting', 'openid', 'profile', 'email']

# QUICKBOOKS_CLIENT_ID = "ABVADzXwU4pjtflUGRHEDEHfwvT74CExLzvrtjSukVTrU8aIHG"
# QUICKBOOKS_CLIENT_SECRET = "u4d8uLHQJNh8zVVjx35Bim5OugbvoxyoOd3aKfog"
# QUICKBOOKS_REDIRECT_URI = 'http://localhost:8000/quickbooks/callback'
# QUICKBOOKS_ENVIRONMENT = 'production'  
# QUICKBOOKS_SCOPES = ['com.intuit.quickbooks.accounting', 'openid', 'profile','email']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #3rd party apps
    'rest_framework',
    'rest_framework.authtoken',
    'phonenumber_field',
    'django_filters',
    'crispy_forms',
    'django_extensions',
    'import_export',
    'corsheaders',
    "crispy_bootstrap4",
    'django_select2',
    # 'bootstrap4',
    # our apps
    'apps.accounts',
    'apps.field',
    'apps.farms',
    'apps.gallery',
    'apps.questions',
    'apps.survey',
    'apps.grower',
    'apps.growersurvey',
    'apps.notesandupdate',
    'apps.documents',
    'apps.contracts',
    'apps.docusign',
    'apps.storage',
    'apps.processor',
    'apps.farmsmart',
    'apps.growerpayments',
    'apps.processor2',
    'apps.processor3',
    'apps.processor4',
    'apps.chat',
    'apps.assistantapp',
    'apps.tracemodule',
    'apps.warehouseManagement',
    'apps.quickbooks_integration',    

]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
#     'corsheaders.middleware.CorsMiddleware',
# ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'main.urls'

TEMPLATE_DIRS = [ BASE_DIR / "templates"]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': TEMPLATE_DIRS,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

#Local DB
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         # 'NAME': 'harvesttrails',
#         'NAME': 'harvestrails_new',
#         'USER': 'postgres',
#         'PASSWORD': 'suman',
#         'HOST': 'localhost',
#         'PORT': '5432'
#     }
# }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         # 'NAME': 'harvesttrails',
#         'NAME': 'harvesttrails_dumpdata',
#         'USER': 'postgres',
#         'PASSWORD': 'suman',
#         'HOST': 'localhost',
#         'PORT': '5432'
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = "accounts.User"

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

# Messages
from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}

LOGIN_REDIRECT_URL = 'dashboard'
LOGIN_URL = 'login'
# LOGOUT_REDIRECT_URL = 'logout'

CRISPY_TEMPLATE_PACK = 'bootstrap4'
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 1209600  # Two weeks
SESSION_COOKIE_SECURE = False  # If you're using HTTPS
SESSION_SAVE_EVERY_REQUEST = False # Optional, saves session on every request
SESSION_EXPIRE_AT_BROWSER_CLOSE = False # One week
DEFAULT_TOKEN_EXPIRY = 3600

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'
# TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Email Conf
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# DEFAULT_FROM_EMAIL = 'techsupportUS@agreeta.com'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_USE_TLS = True
# EMAIL_PORT = 587
# EMAIL_HOST_USER = 'techsupportUS@agreeta.com'
# EMAIL_HOST_PASSWORD = 'winISfun2022!'

# Email Conf
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
DEFAULT_FROM_EMAIL = 'rijughosh.claymindsolution@gmail.com'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'rijughosh.claymindsolution@gmail.com'
EMAIL_HOST_PASSWORD = ''

#Django stores date and time information in UTC
USE_TZ = True
FILE_UPLOAD_HANDLERS = [
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
]


DS_CONFIG = {
    "ds_client_id": "8e415bea-3707-4a51-8708-f9aabdb1513d",  # The app's DocuSign integration key
    "ds_client_secret": "a8a6d2cc-9c19-4cbc-89c6-becca9ac3ba3",  # The app's DocuSign integration key's secret
    "organization_id": "{ORGANIZATION_ID}", # A GUID value that identifies the organization
    "signer_email": "techsupportUS@agreeta.com",
    "signer_name": "Agreeta Solutions USA",
    "app_url": "http://localhost:8000",  # The URL of the application. Eg http://localhost:5000
    # NOTE: You must add a Redirect URI of appUrl/ds/callback to your Integration Key.
    #       Example: http://localhost:5000/ds/callback
    "authorization_server": "https://account-d.docusign.com",
    "click_api_client_host": "https://demo.docusign.net/clickapi",
    "rooms_api_client_host": "https://demo.rooms.docusign.com/restapi",
    "monitor_api_client_host": "https://lens-d.docusign.net",
    "admin_api_client_host": "https://api-d.docusign.net/management",
    "allow_silent_authentication": True,  # a user can be silently authenticated if they have an
    # active login session on another tab of the same browser
    "target_account_id": None,  # Set if you want a specific DocuSign AccountId,
    # If None, the user's default account will be used.
    "demo_doc_path": "demo_documents",
    "doc_salary_docx": "World_Wide_Corp_salary.docx",
    "doc_docx": "World_Wide_Corp_Battle_Plan_Trafalgar.docx",
    "doc_pdf": "World_Wide_Corp_lorem.pdf",
    "doc_terms_pdf": "Term_Of_Service.pdf",
    "doc_txt": "Welcome.txt",
    # Payment gateway information is optional
    "gateway_account_id": "{DS_PAYMENT_GATEWAY_ID}",
    "gateway_name": "stripe",
    "gateway_display_name": "Stripe",
    "github_example_url": "https://github.com/docusign/code-examples-python/tree/master/app/eSignature/examples/",
    "monitor_github_url": "https://github.com/docusign/code-examples-python/tree/master/app/monitor/examples/",
    "admin_github_url": "https://github.com/docusign/code-examples-python/tree/master/app/admin/examples/",
    "click_github_url": "https://github.com/docusign/code-examples-python/tree/master/app/click/examples/",
    "documentation": "",  # Use an empty string to indicate no documentation path.
    "quickstart": "true"
}

DS_JWT = {
    # "ds_client_id": "8e415bea-3707-4a51-8708-f9aabdb1513d",
    # "ds_account_id": "fdaf9875-32ca-4db0-bd09-eace6f7c8942",
    "ds_account_id": "34999917-4c34-4a10-8de4-d2774721db53",
    "ds_client_id": "aa4478aa-5f54-4716-bf6e-b92bbae17310",
    "ds_base_url": "https://na4.docusign.net",
    # "ds_rest_url": "https://demo.docusign.net/restapi",
    "ds_rest_url": "https://na4.docusign.net/restapi",
    "ds_impersonated_user_id": "53e48048-bc5a-4b9d-b620-8ae16f64f6f5",  # The id of the user.
    "private_key_file":  f"{BASE_DIR}/agfarm/private.key", # Create a new file in your repo source folder named private.key then copy and paste your RSA private key there and save it.
    "authorization_server": "account.docusign.com",
    "session_store_file": f"{BASE_DIR}/apps/docusign/docusign_token"
}


# os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"


# CELERY_BROKER_URL = os.environ.get("CELERY_BROKER", "redis://localhost:6379/0")
# CELERY_RESULT_BACKEND = os.environ.get("CELERY_BROKER", "redis://localhost:6379/0")
CELERY_BROKER_URL = 'redis://0.0.0.0:6379'
CELERY_RESULT_BACKEND = 'redis://0.0.0.0:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

